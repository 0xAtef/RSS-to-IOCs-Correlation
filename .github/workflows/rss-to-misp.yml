name: RSS to MISP Feed

on:
  schedule:
    - cron: '0 * * * *'   # hourly
  workflow_dispatch:

jobs:
  build-feed:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download spaCy model
        run: python -m spacy download en_core_web_sm

      - name: Run collector & build feed
        # this single script now does:
        # 1) fetch RSS IOCs
        # 2) write events/{uuid}.json
        # 3) maintain events/manifest.json
        run: python rss_ioc_collector.py


      - name: Read feed paths from config.json
        id: feed-config
        run: |
          echo "OUTPUT=$(jq -r .output_base_dir < config.json)" >> $GITHUB_ENV
          echo "MANIFEST=$(jq -r .manifest_path < config.json)" >> $GITHUB_ENV
      
      - name: Commit & push feed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
          # Fetch & rebase (auto-stash any local changes)
          git pull --rebase --autostash origin "$(git rev-parse --abbrev-ref HEAD)"
      
          # Stage the per-UUID event files and the manifest
          git add misp_feed/events misp_feed/events/manifest.json
      
          # Commit if there are staged changes
          git diff --staged --quiet || git commit -m "Rebuild MISP feed"
      
          # Push via token
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git push origin main
      